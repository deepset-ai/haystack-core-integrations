name: Core / Sync API reference with Docusaurus

on:
  # for testing purposes
  pull_request:
  push:
    tags:
      - "**-v[0-9].[0-9]+.[0-9]+"

  workflow_dispatch: # Activate this workflow manually
    inputs:
      tag:
        description: "Tag with this format: integrations/<INTEGRATION_FOLDER_NAME>-v1.0.0"
        required: true
        type: string
        default: integrations/<INTEGRATION_FOLDER_NAME>-v1.0.0

env:
  # TAG: ${{ inputs.tag || github.ref_name}}
  # for testing purposes
  TAG: integrations/qdrant-v1.0.0

jobs:
  generate-docs:
    runs-on: ubuntu-latest
    outputs:
      artifact_name: ${{ steps.pathfinder.outputs.docusaurus_fname }}

    steps:
      - name: Checkout this repo
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -U haystack-pydoc-tools hatch

      - name: Get project folder
        id: pathfinder
        shell: python
        run: |
          import os
          project_path = os.environ["TAG"].rsplit("-", maxsplit=1)[0]
          docusaurus_fname = project_path.split("/")[-1]
          with open(os.environ['GITHUB_OUTPUT'], 'a') as f:
            print(f'project_path={project_path}', file=f)
            print(f'docusaurus_fname={docusaurus_fname}', file=f)

      - name: Generate docs
        working-directory: ${{ steps.pathfinder.outputs.project_path }}

        run: hatch run docs

      - name: Upload docs artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.pathfinder.outputs.docusaurus_fname }}
          path: ${{ steps.pathfinder.outputs.project_path }}/${{ steps.pathfinder.outputs.docusaurus_fname }}.md
          if-no-files-found: error
          retention-days: 1
          overwrite: true


  sync-docs:
    runs-on: ubuntu-latest
    needs: generate-docs
    
    steps:
      - name: Checkout Haystack repo
        uses: actions/checkout@v5
        with:
          repository: deepset-ai/haystack
          ref: main
          token: ${{ secrets.HAYSTACK_BOT_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.10"          

      - name: Download docs artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.generate-docs.outputs.artifact_name }}

      - name: Sync docs
        shell: python
        run: |
          import os
          import shutil
          # Copy the artifact markdown to docs-website/reference/integrations_api
          artifact_fname = os.environ['ARTIFACT_NAME']+'.md'
          haystack_docs_path = "docs-website/reference/integrations_api/"
          shutil.copy(artifact_fname, haystack_docs_path)

          # loop over docs-website/reference_versioned_docs subfolders and copy the artifact markdown to the corresponding folder
          for folder in os.listdir("docs-website/reference_versioned_docs"):
            shutil.copy(artifact_fname, "docs-website/reference_versioned_docs/" + folder + "/" + artifact_fname)

          # remove the artifact markdown
          os.remove(artifact_fname)

      - name: Print git status
        run: git status