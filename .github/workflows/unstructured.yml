# This workflow comes from https://github.com/ofek/hatch-mypyc
# https://github.com/ofek/hatch-mypyc/blob/5a198c0ba8660494d02716cfc9d79ce4adfb1442/.github/workflows/test.yml
name: Test / unstructured

on:
  schedule:
    - cron: "0 0 * * *"
  pull_request:
    paths:
      - "integrations/unstructured/**"
      - ".github/workflows/unstructured.yml" 

defaults:
  run:
    working-directory: integrations/unstructured    

concurrency:
  group: unstructured-${{ github.head_ref }}
  cancel-in-progress: true

env:
  PYTHONUNBUFFERED: "1"
  FORCE_COLOR: "1"

jobs:
  run:
    name: Python ${{ matrix.python-version }} on ${{ startsWith(matrix.os, 'macos-') && 'macOS' || startsWith(matrix.os, 'windows-') && 'Windows' || 'Linux' }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
      - name: Free up disk space
        working-directory: .
        run: |
          sudo docker image prune --all --force

      - name: Run Unstructured API (docker)
        working-directory: .
        run: |
          docker run -d \
            --name unstructured-api \
            -p 8000:8000 \
            --health-cmd "curl --fail http://localhost:8000/healthcheck || exit 1" \
            --health-interval 10s \
            --health-timeout 1s \
            --health-retries 10 \
            quay.io/unstructured-io/unstructured-api:latest       

      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Hatch
        run: pip install --upgrade hatch

      - name: Lint
        if: matrix.python-version == '3.9'
        run: hatch run lint:all

      - name: Generate docs
        if: matrix.python-version == '3.9' && runner.os == 'Linux'
        run: hatch run docs

      - name: Run tests
        id: tests
        run: hatch run cov

      - name: Nightly - run unit tests with Haystack main branch
        if: github.event_name == 'schedule'
        id: nightly-haystack-main
        run: |
          hatch run pip install git+https://github.com/deepset-ai/haystack.git
          hatch run test -m "not integration"
      
      - name: Send event to Datadog for nightly failures
        if: failure() && github.event_name == 'schedule'
        uses: ./.github/actions/send_failure
        with:
          title: |
            core-integrations failure: 
            ${{ (steps.tests.conclusion == 'nightly-haystack-main') && 'nightly-haystack-main' || 'tests' }}
             - ${{ github.workflow }}
          api-key: ${{ secrets.CORE_DATADOG_API_KEY }}