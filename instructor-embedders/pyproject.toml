[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "instructor-embedders-haystack"
dynamic = ["version"]
description = 'Haystack 2.x component to embed strings and Documents using Instructor embedding model.'
readme = "README.md"
requires-python = ">=3.7"
license = "Apache-2.0"
keywords = []
authors = [
  { name = "deepset GmbH", email = "info@deepset.ai" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "haystack-ai",

  # The following dependencies are copied from https://github.com/xlang-ai/instructor-embedding/blob/main/requirements.txt
  # since the InstructorEmbedding package does not install them, but they are mandatory.
  # Commenting some of them to not interfere with the dependencies of Haystack.
  #"transformers==4.20.0",
  "datasets>=2.2.0",
  #"pyarrow==8.0.0",
  "jsonlines",
  "numpy",
  "requests>=2.26.0",
  "scikit_learn>=1.0.2",
  "scipy",
  "sentence_transformers>=2.2.0",
  "torch",
  "tqdm",
  "rich",

  "InstructorEmbedding"
]

[project.optional-dependencies]
dev = ["pytest"]

[project.urls]
Documentation = "https://github.com/deepset-ai/haystack-extras/tree/main/components/instructor-embedders#readme"
Issues = "https://github.com/deepset-ai/haystack-extras/issues"
Source = "https://github.com/deepset-ai/haystack-extras/tree/main/components/instructor-embedders"

[tool.hatch.version]
path = "instructor_embedders/__about__.py"

[tool.hatch.envs.default]
dependencies = ["pytest", "pytest-cov"]

[tool.hatch.envs.default.scripts]
cov = "pytest --cov-report=term-missing --cov-config=pyproject.toml --cov=instructor-embedders --cov=tests"
no-cov = "cov --no-cov"

[[tool.hatch.envs.test.matrix]]
python = ["37", "38", "39", "310", "311"]

[tool.coverage.run]
branch = true
parallel = true
omit = ["instructor_embedders/__about__.py"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]

[tool.ruff]
target-version = "py37"
line-length = 120
select = [
  "A",
  "ARG",
  "B",
  "C",
  "DTZ",
  "E",
  "EM",
  "F",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
ignore = [
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Ignore checks for possible passwords
  "S105", "S106", "S107",
  # Ignore complexity
  "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
]
unfixable = [
  # Don't touch unused imports
  "F401",
]

[tool.ruff.isort]
known-first-party = ["instructor_embedders"]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--strict-markers"
markers = ["integration: integration tests", "unit: unit tests"]
log_cli = true

[tool.black]
line-length = 120
